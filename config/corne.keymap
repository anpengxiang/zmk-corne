/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        bp: balanced {
            compatible = "zmk,behavior-hold-tap";
            label = "BALANCED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hp: hold-preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD-PREFERRED";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB                 &kp Q  &kp W  &kp E                &kp R  &kp T                  &kp Y                  &kp U  &kp I                &kp O    &kp P     &kp BSPC
&hp LEFT_CONTROL GRAVE  &kp A  &kp S  &kp D                &kp F  &kp G                  &kp H                  &kp J  &kp K                &kp L    &kp SEMI  &bp RIGHT_CONTROL SQT
&hp LEFT_SHIFT ESCAPE   &kp Z  &kp X  &kp C                &kp V  &kp B                  &kp N                  &kp M  &kp COMMA            &kp DOT  &kp FSLH  &kp BACKSLASH
                                      &hp LEFT_ALT ESCAPE  &mo 1  &bp LEFT_META SPACE    &bp RIGHT_SHIFT SPACE  &mo 2  &bp RIGHT_ALT ENTER
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans          &kp LEFT_BRACE                     &kp RIGHT_BRACE                 &trans    &kp PLUS   &kp N7        &kp N8        &kp N9        &trans  &trans
&trans  &trans  &kp LEFT_SHIFT  &tp LEFT_COMMAND LEFT_PARENTHESIS  &tp LEFT_ALT RIGHT_PARENTHESIS  &trans    &kp EQUAL  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &trans
&trans  &trans  &trans          &kp LEFT_BRACKET                   &kp RIGHT_BRACKET               &trans    &kp MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                                &trans                             &trans                          &trans    &trans     &trans        &kp NUMBER_0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL      &kp AT               &kp HASH                   &kp DLLR               &kp PRCNT       &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp UNDER        &kp PIPE  &trans
&trans  &kp NUMBER_1  &tp LSHIFT NUMBER_2  &tp LEFT_COMMAND NUMBER_3  &tp LEFT_ALT NUMBER_4  &kp NUMBER_5    &kp LEFT   &kp DOWN       &kp UP_ARROW  &kp RIGHT_ARROW  &trans    &trans
&trans  &kp NUMBER_6  &kp NUMBER_7         &kp NUMBER_8               &kp NUMBER_9           &kp NUMBER_0    &kp UNDER  &trans         &trans        &trans           &trans    &trans
                                           &trans                     &trans                 &trans          &trans     &trans         &trans
            >;
        };

        tri_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans         &trans            &trans          &none            &none  &out OUT_TOG
&trans       &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp C_VOL_DN      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_UP  &none  &trans
&bootloader  &kp F6        &kp F7        &kp F8        &kp F9        &kp F10         &kp C_PLAY_PAUSE  &kp C_NEXT            &kp C_PREV            &trans           &none  &bootloader
                                         &trans        &trans        &trans          &trans            &trans                &trans
            >;
        };
    };
};
